# docker-compose.yml
version: '3.3'

services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - VIRTUAL_HOST=designspaceai.dawood.design
      - LETSENCRYPT_HOST=designspaceai.dawood.design
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY}
      - PUBLIC_MINIO_ENDPOINT=https://minio.designspaceai.dawood.design
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - postgres
      - minio
    restart: always
    networks:
      - proxy-network

  minio:
    image: minio/minio
    environment:
      - VIRTUAL_HOST=minio.designspaceai.dawood.design
      - LETSENCRYPT_HOST=minio.designspaceai.dawood.design
      - MINIO_ROOT_USER=${MINIO_ACCESS_KEY}
      - MINIO_ROOT_PASSWORD=${MINIO_SECRET_KEY}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    restart: always
    networks:
      - proxy-network

  postgres:
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    networks:
      - proxy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  minio_data:
  postgres_data:

networks:
  proxy-network:
    external: true